*{
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}
html{
    font-size: 10px;
}
body{
    font-size: 2rem;
    height: 100vh;
    width: 100vw;
}
:root{
    --frontWidth : 60rem;
    --frontHeight : 60rem;
    --sideWidth : 20rem;
    --contFrontWidth : 10.5rem;
    --contFrontHeight : 12rem;
    --contSideWidth : 20rem; 
    --distance : 1700;
    --currentRack : 0; 
}
h2{
    text-align: center;
    color: #3a0ca3;
    font-family: Georgia, 'Times New Roman', Times, serif;
}
.fullContainer{
    display: grid;
    grid-template-columns: 2fr 1fr;
    grid-template-rows: auto 1fr;
    padding: 1rem;
    row-gap: 4rem;
    column-gap: 2rem;
}
.searchBox{
    border: 1px solid #ddd;
    padding: 1rem;
    background-color: rgb(250,249,252);
    z-index: 11;
}
.search{
    gap: 2rem;
}
.inputpad{
    padding: 0.5rem;
}
.flex{
    display: flex;
    align-items: center;
    justify-content: center;
}
.contStyle, .containerStyle div{
    background-color: #fdc500 !important;
}
.containerStyle>div{
    animation: rotate-animation 2s linear infinite;
    z-index: 11;
}
.containerStyle p:last-child, .blinkContainer p:last-child, .contStyle p:last-child{
    display: flex;
}
@keyframes rotate-animation {
    0% {
      transform: translate3d(1.5rem, 1.8rem, 3rem);
    }
    50%{
        transform: translate3d(1.5rem, 1.8rem, 15rem);
      }
    100%{
        transform: translate3d(1.5rem, 1.8rem, 3rem) ;
      }
}
.sticker{
    padding: 0.3rem;
    background-color: white;
}
.displayQuantity{
    display: none;
}
.pathColor{
    color: #3a0ca3;
    font-weight: bold;
}
button{
    background-color: #3a0ca3;
    color: white;
    border: none;
    padding: 1rem 2rem;
    border-radius: 0.4rem;
    font-size: 1.5rem;
    cursor: pointer;
    font-weight: bold;
}
button:hover{
    background-color: #5110e9;
}
.formlayout{
    padding: 2rem;
    background-color: rgb(250,249,252);
}
#billform{
    display: none;
    grid-area: 1/2/2/3;
    border: 0.1rem solid #ddd;   
}
.containerRack{
    grid-area: 2/1/3/2;
}
.containerRack{
    display: grid;
    grid-template-rows: auto 1fr;
    gap: 5rem;
}
.space{
    z-index: 11;
}
.blinkContainer{
    animation: blink-animation 1s steps(5, start) infinite;
    z-index: 11;
}
@keyframes blink-animation {
    to{
        visibility: hidden;
    }
  }
.minimumQuantity, .blinkContainer div{
    background-color: red !important;
}
.createList{
    grid-area: 2/2/3/3;
    z-index: 111; 
}
#listContainer{
    display: grid;
    grid-template-rows: auto 1fr;
    height: 70rem;
    border: 1px solid #ddd;
    font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    font-size: 1.6rem;
}
.listHeader, .medicineList>div{
    display: grid;
    grid-template-columns: repeat(2,1fr);
}
.medicineList{
    display: grid;
    grid-auto-rows: auto;
    overflow-y: scroll;
    cursor: pointer;
}
.medicineList>div:nth-child(even){
    background-color: rgb(250,249,252);
}
.boldText{
    font-weight: bold;
    background-color: #3a0ca3;
    color: white;
}
.listStyle{
    padding: 0.5rem;
}
.iconpad{
    padding: 0rem 1rem;
    cursor: pointer;
}
.iconpad:hover{
    color: rgb(219, 219, 223);
    font-weight: bolder;
}
.displayInput{
    display: none;
    gap: 0.5rem;
}
.inputWidth{
    width: 20%;
}
.go{
    border: 1px solid;
    background-color: rgb(89,172,110);
    color: white;
    border-radius: 50%;
    font-size: 1.4rem !important;
    padding: 0.3rem;
    text-align: center;
}
.container{
    display: grid;
    justify-content: center;
}
.scene{
    width: 100rem;
    height: 50rem;
    perspective: 200rem;
    perspective-origin: right;
    transform-style: preserve-3d;
    position: absolute;
}
.cube{
    position: relative;
    transform-style: preserve-3d;
    transform: translate3d(1.5rem, 1.8rem, 3rem);
}
.face{
    position:absolute;
    border: 0.1rem solid black;
}
.rackBackground{
    background-color: #C2B9B0;
}
.frontBack{
    height: var(--frontHeight);
    width: var(--frontWidth);
}
.front{
    transform: rotateY(0deg) translateZ(calc(var(--sideWidth)/2));
    display: grid;
    grid-template-rows: repeat(4,1fr);
}
.back{
    transform: rotateY(180deg) translateZ(calc(var(--sideWidth)/2));
}
.leftRight{
    height: var(--frontHeight);
    width: var(--sideWidth);
}
.right{ 
    transform: rotateY(90deg) translateZ(calc(var(--frontWidth) - (var(--sideWidth)/2)));
}
.left{
    transform: rotateY(-90deg) translateZ(calc(var(--sideWidth)/2));
}
.topBottom{
    height: var(--sideWidth);
    width: var(--frontWidth);
}
.top{
    transform: rotateX(90deg) translateZ(calc(var(--sideWidth)/2));
}
.bottom{
    transform: rotateX(-90deg) translateZ(calc(var(--frontHeight) - (var(--sideWidth)/2)));
}
.shelf{
    border: 1px solid black; 
    display: grid;
    grid-template-columns: repeat(5,1fr);
}
.medBox{
    width: 12rem;
    height: 12.5rem;
    transform-style: preserve-3d;
    perspective: 100rem;
    perspective-origin: right;
} 
.contBackground{
    background-color: blue;
}
.contFrontBack{
    height: var(--contFrontHeight);
    width: var(--contFrontWidth);
}
.contFront{
    transform: rotateY(0deg) translateZ(calc(var(--contSideWidth)/2));
    opacity: 0.8;
    font-size: 1.5rem;
    text-align: center;
    flex-direction: column;
    gap: 2px;
}
.contBack{
    transform: rotateY(180deg) translateZ(calc(var(--contSideWidth)/2));
}
.contLeftRight{
    height: var(--contFrontHeight);
    width: var(--contSideWidth);
}
.contRight{
    transform: rotateY(90deg) translateZ(calc(var(--contFrontWidth) - (var(--contSideWidth)/2)));
}
.contLeft{
    transform: rotateY(-90deg) translateZ(calc(var(--contSideWidth)/2));
}
.contTopBottom{
    height: var(--contSideWidth);
    width: var(--contFrontWidth);
}
.contTop{
    transform: rotateX(90deg) translateZ(calc(var(--contSideWidth)/2));
}
.contBottom{
    transform: rotateX(-90deg) translateZ(calc(var(--contFrontHeight) - (var(--contSideWidth)/2)));
}
#rack_1,#rack_2,#rack_3,#rack_4,#rack_5{
    transition: 2s;
}
#rack_5{
    transform: translate3d(150px,0px,calc(4*var(--distance)*(-1px) + (var(--currentRack)*var(--distance)*1px)));
}
#rack_4{
    transform: translate3d(150px,0px,calc(3*var(--distance)*(-1px) + (var(--currentRack)*var(--distance)*1px)));
}
#rack_3{
    transform: translate3d(150px,0px,calc(2*var(--distance)*(-1px) + (var(--currentRack)*var(--distance)*1px)));
}
#rack_2{
    transform: translate3d(150px,0px,calc(1*var(--distance)*(-1px) + (var(--currentRack)*var(--distance)*1px)));
}
#rack_1{
    transform: translate3d(150px,0px,calc(0*var(--distance)*(-1px) + (var(--currentRack)*var(--distance)*1px)));
} 
